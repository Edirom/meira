<?xml version="1.0" encoding="UTF-8" ?>
<elementDefinition
	xmlns="NS:DEF"
	xmlns:svg="http://www.w3.org/2000/svg"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:xlink="http://www.w3.org/1999/xlink">
	
	<!-- TODO: Define one <text> element that can draw text using "normal" fonts or symbols from symbols.svg 
	           This requires font metadata that should be stored using the SVG font syntax (like in symbols.svg) 
	     QUESTION: How can font metadata be gathered?  Kerning is also possible, but where can kern pairs be found? -->
	<element name="symbolText">
		<properties>
			<elementReference name="start" lacuna=".."/>
      <!-- TODO: Is there a more elegant solution (that can be defined in timeSignature.def) 
           for automatically centering timeSignature fractions? Same below for @y. -->
			<coordinate name="x" anchor="g:x(g:start(.))" lacuna="if (parent::musx:fraction)
			                                                      then .5*(g:width(..) - g:width(.))
			                                                      else 0" orientation="x"/>
		  <!-- TODO: Is there a more elegant solution (that can be defined in timeSignature.def)
		       for vertically positioning timeSignature fractions? Same above for @x. -->
		  <coordinate name="y" anchor="g:y(..)" lacuna="if (parent::musx:fraction)
			                                              then (4*count(preceding-sibling::musx:symbolText)-2)*g:staffSize(.)
			                                              else 0" orientation="y"/>
			
			<coordinate name="x1" anchor="g:x(.)" lacuna="0 - g:width(.) * g:textAnchor(.)" orientation="x"/>
			<coordinate name="x2" anchor="g:x(.)" lacuna="(1 - g:textAnchor(.)) * g:width(.)" orientation="x"/>
			<coordinate name="y1" anchor="g:y(.)" lacuna="0" orientation="y"/>
			<coordinate name="y2" anchor="g:y(.)" lacuna="0" orientation="y"/>
			
			<scaleFactor name="size" anchor="g:size(..)" lacuna="1"/>
			
			<!-- text-anchor = 0 means: align left
         text-anchor = .5 means: align at center
         text-anchor = 1 means: align right
         Values between (like align = .25) are possible -->
			<number name="textAnchor" lacuna="0"/>
			
			<scaleFactor name="width" anchor="g:size(.)" lacuna="sum(def:getGlyphWidth(text()))"/>
		</properties>
		
		<xsl:key name="unicode-glyph" match="svg:glyph" use="string-to-codepoints(@unicode)"/>
		
		<xsl:function name="def:getGlyphWidth" as="xs:double*">
			<xsl:param name="string" as="xs:string"/>
			<xsl:for-each select="string-to-codepoints($string)">
				<!-- TODO: Modify this so that document() can also take the URI of a file with other font metadata -->
				<xsl:sequence select="number(key('unicode-glyph',.,document(concat($libDirectory,'/',$symbolFile)))/@horiz-adv-x)"/>
			</xsl:for-each>
		</xsl:function>
		
		<xsl:function name="def:drawSymbols" as="node()*">
			<xsl:param name="string" as="xs:string"/>
			<xsl:param name="x" as="xs:double"/>
			
			<xsl:variable name="char" select="substring($string,1,1)"/>
			
			<xsl:variable name="symbolName" select="
				  if($char='.') then 'period'
				  else if($char='+') then 'plus'
				  else $char" as="xs:string"/>
			
			<xsl:if test="string-length($string) gt 0">
				<svg:use xlink:href="{$libDirectory}/{$symbolFile}#ascii.{$symbolName}" x="{$x}"/>
				<xsl:sequence select="def:drawSymbols(substring($string,2),$x + def:getGlyphWidth($char))"/>
			</xsl:if>
		</xsl:function> 
		
		<draw svg:transform="translate({g:x1(.)},{g:y(.)}) scale({g:size(.)})">
			<xsl:sequence select="def:drawSymbols(text(), 0)"/>
		</draw>
</element>

</elementDefinition>