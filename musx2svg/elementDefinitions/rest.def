<?xml version="1.0" encoding="UTF-8" ?>
<elementDefinition
  xmlns="NS:DEF"
  xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:g="NS:GET">
  
<!-- TODO: Multi-measure-rests -->

<element name="rest">
  <properties>
    <!-- Whole rests are centered between start and end references. --> 
    <elementReference name="start" lacuna=".."/>
    <elementReference name="end" lacuna="g:start(.)"/>
    
    <coordinate name="x" orientation="x" anchor="g:x(g:start(.))" lacuna="0"/>
    <!-- TODO: What should the baseline of rests be? -->
    <coordinate name="y" orientation="y" anchor="g:y(..)" lacuna="-4 * g:size(ancestor::staff)"/>
    
    <coordinate name="x1" orientation="x" anchor="g:x(.)" lacuna="0"/>
    <coordinate name="x2" orientation="x" anchor="g:x(g:end(.))" lacuna="
        if (@end) 
        then -g:size(.)*number(g:svgSymbolBoundingBox(g:symbol(.))/@width)
        else 0"/>
    
    <coordinate name="y1" orientation="y" anchor="g:y(.)" lacuna="0"/>
    <coordinate name="y2" orientation="y" anchor="g:y(.)" lacuna="0"/>
    
    <!--<coordinate name="BB.left" orientation="x" anchor="0" lacuna="g:x1(.)"/>-->
    <!-- QUESTION: Implement this like this?  Getter-templates for @symobl? -->
    <!--<coordinate name="BB.right" orientation="y" anchor="0" lacuna="max(g:BB.right(@symbol|dots))"/>-->
    
    <scaleFactor name="size" anchor="g:size(..)" lacuna="1"/>
    
    <number name="step" lacuna="(
          if(substring(@y,1,1)='S')
          then substring(@y,2)
          else (g:y(.) - g:y(ancestor::musx:staff)) div g:size(ancestor::musx:staff)
        ) cast as xs:double"/>
    
    <symbol name="symbol" lacuna="''"/>
  </properties>
  
  <draw>
                              <!-- (g:x1(.) + g:x2(.)) div 2 centers whole rests between start and end references (barlines) --> 
    <svg:use transform="translate({(g:x1(.) + g:x2(.)) div 2},{g:y(.)}) scale({g:size(.)})"
      xlink:href="{g:symbol(.)}"/>
  </draw>
</element>

</elementDefinition> 